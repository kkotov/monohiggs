library(slidify)
slidify("index.Rmd")
browseURL("index.html")
q()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
q)
q()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
q()
fg
q()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
q()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
q()
rate <- c(0.1832/0.2925, 0.1803/0.2925, 0.1728/0.2925, 0.16/0.2925, 0.1402/0.2925, 0.1093/0.2925, 0.051/0.2925)
mass <- c(1, 10, 20, 30, 40, 50, 60)
rate <- c(0.126, 0.122, 0.108, 0.085, 0.057, 0.027, 0.003)
library(ggplot2)
qplot(mass,rate) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(M[phi]," (GeV)")),y=expression(paste(sigma,"(H",phi,bar(phi),")/",sigma,"(H)")),title=expression(paste("Normalized H",phi,bar(phi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21)
qplot(mass,rate) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(M[chi]," (GeV)")),y=expression(paste(sigma,"(H",chi,bar(chi),")")),title=expression(paste("H",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21)
dev.copy(svg,'rate.svg')
dev.off()
q()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
library(ggplot2)
qplot(mass,rate) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(m[chi]," (GeV)")),y=expression(paste(sigma,"(H",chi,bar(chi),")")),title=expression(paste("H",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21)
qplot(mass,rate) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(m[chi]," (GeV)")),y=expression(paste(sigma,"(h",chi,bar(chi),")")),title=expression(paste("h",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21)
dev.copy(svg,'rate.svg')
dev.off()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
rate2 <- c(0.127, 0.126, 0.126)
mass2 <- c(10,100,1000)
qplot(mass2,rate2) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(m[sc]," (GeV)")),y=expression(paste(sigma,"(h",chi,bar(chi),")")),title=expression(paste("h",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21)
library(ggplot2)
qplot(mass2,rate2) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(m[sc]," (GeV)")),y=expression(paste(sigma,"(h",chi,bar(chi),")")),title=expression(paste("h",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21)
qplot(mass2,rate2) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(m[sc]," (GeV)")),y=expression(paste(sigma,"(h",chi,bar(chi),")")),title=expression(paste("h",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21) + coord_cartesian(ylim = c(0, 0.13))
qplot(mass2,rate2) + theme(title = element_text(size = 25), axis.text.x = element_text(size = 25), axis.text.y = element_text(size = 25), axis.title.x = element_text(size = 25)) + labs(x=expression(paste(m[sc]," (GeV)")),y=expression(paste(sigma,"(h",chi,bar(chi),")")),title=expression(paste("h",chi,bar(chi)," production rate"))) + geom_point(shape = 2,size = 3.8,colour = "red",pch=21) + coord_cartesian(ylim = c(0, 0.13)) + scale_x_log10()
dev.copy(svg,'rate2.svg')
dev.off()
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
library(ggplot2)
hznn <- read.csv(file='Step3_ZnnH125.csv',header=T,sep=',')
length(hznn)
head(hznn)
ggplot(data=hznn,aes(x=met_pt)) + geom_histogram()
ggplot(data=hznn,aes(x=met_pt)) + geom_histogram(breaks=seq(0,500,10),color="steelblue",fill="steelblue")
ggplot(data=hznn,aes(x=met_pt)) + geom_histogram(breaks=seq(0,500,10),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ggplot(data=hznn,aes(x=met_pt,wright=0.1)) + geom_histogram(breaks=seq(0,500,10),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ggplot(data=hznn,aes(x=met_pt,weight=0.1)) + geom_histogram(breaks=seq(0,500,10),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ttp <- read.csv(file='Step3_TTPythia8.csv',header=T,sep=',')
hznn$xsec = 0.100352
hznn$genWeight = 0.100352 /   101119.
ttp&xsec = 809.1
ttp&xsec <- 809.1
head(ttp)
ttp&xsec <- 809.1
ttp$xsec = 809.1
ttp$genWeight = 809.100000 /  2991597.
library(ggplot2)
qcd     <- read.csv(file='Step3_QCD.csv',      header=T,sep=',')
qcd100  <- read.csv(file='Step3_QCDHT100.csv', header=T,sep=',')
qcd250  <- read.csv(file='Step3_QCDHT250.csv', header=T,sep=',')
qcd500  <- read.csv(file='Step3_QCDHT500.csv', header=T,sep=',')
qcd1000 <- read.csv(file='Step3_QCDHT1000.csv',header=T,sep=',')
t_t     <- read.csv(file='Step3_T_t.csv',      header=T,sep=',')
tbar_t  <- read.csv(file='Step3_Tbar_t.csv',   header=T,sep=',')
t_tw    <- read.csv(file='Step3_T_tW.csv',     header=T,sep=',')
tbar_tw <- read.csv(file='Step3_Tbar_tW.csv',  header=T,sep=',')
t_s     <- read.csv(file='Step3_T_s.csv',      header=T,sep=',')
tbar_s  <- read.csv(file='Step3_Tbar_s.csv',   header=T,sep=',')
wjets   <- read.csv(file='Step3_WJets.csv',    header=T,sep=',')
ttp     <- read.csv(file='Step3_TTPythia8.csv',header=T,sep=',')
hznn    <- read.csv(file='Step3_ZnnH125.csv',  header=T,sep=',')
#zj      <- read.csv(file='Step3_ZJets.csv',    header=T,sep=',')
zj100   <- read.csv(file='Step3_ZJetsHT100.csv',header=T,sep=',')
zj200   <- read.csv(file='Step3_ZJetsHT200.csv',header=T,sep=',')
zj600   <- read.csv(file='Step3_ZJetsHT600.csv',header=T,sep=',')
wjInc   <- read.csv(file='Step3_WJetsIncl.csv',header=T,sep=',')
wj100   <- read.csv(file='Step3_WJetsHT100.csv',header=T,sep=',')
wj200   <- read.csv(file='Step3_WJetsHT200.csv',header=T,sep=',')
wj400   <- read.csv(file='Step3_WJetsHT400.csv',header=T,sep=',')
wh      <- read.csv(file='Step3_WlnH125.csv',   header=T,sep=',')
monoH   <- read.csv(file='Step3_monoH.csv',     header=T,sep=',')
data <- data.frame( met_pt=numeric(), H_mass=numeric(), xsec=numeric(), genWeight=numeric(), name=factor() )
qcd100$xsec = 28730000.
qcd100$genWeight = 28730000. / 4123591.
qcd100$name = "QCD100"
data <- rbind(data, qcd100)
qcd250$xsec = 670500.
qcd250$genWeight = 670500. / 2668164.
qcd250$name = "QCD250"
data <- rbind(data, qcd250)
qcd500$xsec = 26740.
qcd500$genWeight = 26740. / 4063331.
qcd500$name = "QCD500"
data <- rbind(data, qcd500)
qcd1000$xsec = 769.7
qcd1000$genWeight = 769.7 / 1464447.
qcd1000$name = "QCD1000"
data <- rbind(data, qcd1000)
t_t$xsec = 118.44
t_t$genWeight = 118.440000 /  3990985.
t_t$name = "T_t"
data <- rbind(data, t_t)
tbar_t$xsec = 64.47
tbar_t$genWeight = 64.47 /  1999793.
tbar_t$name = "Tbar_t"
data <- rbind(data, tbar_t)
t_tw$xsec = 23.31
t_tw$genWeight = 23.31 / 986096.
t_tw$name = "T_tW"
data <- rbind(data, t_tw)
tbar_tw$xsec = 23.31
tbar_tw$genWeight = 23.31 / 971797.
tbar_tw$name = "Tbar_tW"
data <- rbind(data, tbar_tw)
t_s$xsec = 7.959
t_s$genWeight = 7.959 / 499999.
t_s$name = "T_s"
data <- rbind(data, t_s)
tbar_s$xsec = 3.696
tbar_s$genWeight = 3.696 / 250000.
tbar_s$name = "Tbar_s"
data <- rbind(data, tbar_s)
ttp$xsec = 809.1
ttp$genWeight = 809.100000 / 2991597.
ttp$name = "TTPythia"
data <- rbind(data, ttp)
hznn$xsec = 0.100352
hznn$genWeight = 0.100352 / 101119.
hznn$name = "ZnnH"
data <- rbind(data, hznn)
zj100$xsec = 409.86
zj100$genWeight = 409.86 / 4986410.
zj100$name = "ZJetsHT100"
data <- rbind(data, zj100)
zj200$xsec = 580.068
zj200$genWeight = 580.068 / 4936055.
zj200$name = "ZJetsHT200"
data <- rbind(data, zj200)
zj600$xsec = 4.5243
zj600$genWeight = 4.5243 / 4463773.
zj600$name = "ZJetsHT600"
data <- rbind(data, zj600)
wjInc$xsec = 61623.
wjInc$genWeight = 61623. / 10017431.
wjInc$name = "WJetsIncl"
data <- rbind(data, wjInc)
wj100$xsec = 2234.91
wj100$genWeight = 2234.91 / 5262249.
wj100$name = "WJetsHT100"
data <- rbind(data, wj100)
wj200$xsec = 580.068
wj200$genWeight = 580.068 / 4936055.
wj200$name = "WJetsHT200"
data <- rbind(data, wj200)
wj400$xsec = 68.4003
wj400$genWeight = 68.4003 / 4640575.
wj400$name = "WJetsHT400"
data <- rbind(data, wj400)
wh$xsec = 0.259581
wh$genWeight = 0.259581 / 100803.
wh$name = "WlnH125"
data <- rbind(data, wh)
monoH$genWeight = 0.12
monoH$genWeight = 0.12 / 10000.
monoH$name = "monoH"
data <- rbind(data, monoH)
ggplot(data=data,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(0,500,10),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
head(data)
data$name
source("plot.R")
ggplot(data=data,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(0,500,10),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ggplot(data=data,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(0,500,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ggplot(data=data,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ggplot(data=qcd,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
dev.copy("qcd.svg")
dev.copy(svg,"qcd.svg")
dev.off()
ggplot(data=wjets,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
dev.copy(svg,"wjets.svg")
dev.off()
ggplot(data=zjets,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
dev.copy(svg,"zjets.svg")
dev.off()
ggplot(data=singleT,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
dev.copy(svg,"singleTop.svg")
dev.off()
ggplot(data=monoH,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
ggplot(data=monoH,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
dev.copy(svg,"monoH.svg")
dev.off()
ggplot(data=data,aes(x=met_pt,weight=genWeight)) + geom_histogram(breaks=seq(100,300,10),aes(color=sample,fill=sample)) + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="Monohiggs")
dev.copy(svg,"allButQCD.svg")
dev.off()
library(ggplot2
)
qplot(monoH$H_mass)
ggplot(data=monoH,aes(x=H_mass)) + geom_histogram(breaks=seq(100,140,1))
ggplot(data=monoH,aes(x=H_mass)) + geom_histogram(breaks=seq(80,140,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(80,140,1))
ggplot(data=monoH,aes(x=H_mass)) + geom_histogram(breaks=seq(80,140,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(80,140,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(50,180,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(50,150,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(50,160,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(E[T] ^{miss},"(GeV)")),y="# of events",title="qwe")
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(m[Higgs],"(GeV)")),y="# of events",title=expression(paste("Z(",nu,nu)))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(m[Higgs],"(GeV)")),y="# of events",title=expression(paste("Z(->",nu,nu)))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(m[Higgs],"(GeV)")),y="# of events",title=expression(paste("Z(",nu,nu,"H(bb)")))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(m[Higgs],"(GeV)")),y="# of events",title=expression(paste("Z(",nu,nu,")H(bb)")))
ggplot(data=hznn,aes(x=H_mass)) + geom_histogram(breaks=seq(60,160,1),color="steelblue",fill="steelblue") + theme(title=element_text(size=20), axis.title.x = element_text(size=20), axis.text.x=element_text(size=15)) + labs(x=expression(paste(m[Higgs],"(GeV)")),y="# of events",title=expression(paste("Z(",nu,nu,")H(bb) sample")))
